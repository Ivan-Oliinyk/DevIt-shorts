Стандартные объекты (по категориям)
  Значения
    Infinity
    NaN
    undefined
    null
  
  Функции
  Глобальные функции, возвращающие результат определённой подпрограммы.

    eval() - (приводит строковое выражение к числу)
    uneval() - (приводит числовое выражение к строке)
    isFinite() - (определяет, является ли переданное значение конечным числом)
    isNaN() - (определяет является ли литерал или переменная нечисловым значением (NaN))
    parseFloat() - (принимает строку в качестве аргумента и возвращает десятичное число (число с плавающей точкой))
    parseInt() - (принимает строку в качестве аргумента и возвращает целое число в соответствии с указанным основанием системы счисления.)
    decodeURI() - (декодирует унифицированный идентификатор ресурса (URI), созданный при помощи метода encodeURI или другой подобной процедуры.)
    decodeURIComponent() - 
    encodeURI()
    encodeURIComponent()
    escape() - (возвращает новую строку, в которой определённые символы заменены шестнадцатеричной управляющей последовательностью.
                Используйте методы encodeURI или encodeURIComponent вместо него.)
                
    unescape() - (создаёт новую строку в которой шестнадцатеричная последовательность символов вида %xx заменяется эквивалентами из кодировки ASCII.)
    
 Фундаментальные объекты
 Общие языковые объекты, функции и ошибки.
    Object
    Function
    Boolean
    Symbol
    Error
    EvalError
    InternalError
    RangeError
    ReferenceError
    SyntaxError
    TypeError
    URIError
    
 РАБОТА СО СТРОКАМИ
   1) charAt -> тоже самое что и вызов через index[]; исключение только яляется если вызывать не существующий элемент 
             пример(let str = 'tom' вызов str[10] => undefined, вызов str.charAt(10) вернет пустую строку)
             
   2) concat -> для соединения строк  между собой, но с целью лучшей производительности лучше применять оператор сложения +
   
   3) includes -> проверяет, содержит ли строка заданную подстроку, и возвращает, соответственно true или false
   
   4) indexOf -> str.indexOf(searchValue, [fromIndex]) озвращает индекс первого вхождения указанного значения в строковый объект String, 
                 на котором он был вызван, начиная с индекса fromIndex. Возвращает -1, если значение не найдено.
                 
   5) lastIndexOf -> str.lastIndexOf(searchValue[, fromIndex]) возвращает индекс последнего вхождения указанного значения в строковый объект String, 
                     на котором он был вызван, или -1, если ничего не было найдено.
                     
   6) match -> возвращает получившиеся совпадения при сопоставлении строки с регулярным выражением.
               (возвращает массив, если нету совпадений то вернет null)
   
   7) search -> для поиска совпадений используя регулярные выражения
   
   8) replace -> 
   
   9) substring -> возвращает указанное количество символов из строки, начиная с указанной позиции
   
   10) slice -> извлекает часть строки и возвращает новую строку без изменения оригинальной строки. slice(beginIndex[, endIndex]) 
                (Можно использовать отрицательные значения)
                
   11) split ->  возвращает новый массив str.split([separator[, limit]]) (при использовании отрицательного значения вернет все)
   
   12) repeat -> конструирует и возвращает новую строку, содержащую указанное количество соединённых вместе копий строки, на которой он был вызван.
                 str.repeat(count)
   
   13) trim -> удаляет пробельные символы с начала и конца строки. 
   
   
РАБОТА С ЧИСЛАМИ

  
