uptime -> show how much time work computer
uname -a  ->show version linus and all informations about here
lscpu -?show information about proccesor
clear -?clear window terminal
cd ~ -> перейти в корневой каталог
cat /etc/passwd -> информация о пользователе
whoami -> выводит текущие имя пользователя
id -> показывает айди пользователя,группы,гит
sudo su -> рутт пользователь
sudo -i -> рутт пользователь
su ivan -> возврат к пользователю ivan
exit -> выход с root пользователя

file tetx.txt -> показывает тип файла

$PATH -> show directory we were search command
echo $PATH

man -k (word from command ) ->run Help 
after we find the right command we do next
man (the right command)

whatis pwd ->show information about command
whereis pwd -> show where localization command

ps -> show what commands run in my computer
fg -> return process

ping www.google.com -> whow ping www.google.com
ctr+c -> stop this command
ctr+z -> sleep this command

ls -la -R / ->show all files in computer :)

pwd -> show directiry;
ls -> show fiels
ls -l -> show files
ls ->a
ls -l ->a
ll = ls -la = ls -al = ls -l -a = ls -a -l

User & Groups
cat /etc/passwd - показывает информацию о пользователе и ....
whoami - выводит текущие имя пользователя
id - показать айди пользователя и группы
su - смена пользователя 


sudo su - переход в режим суперпользователя
sodo -i -> -//-
ctr+D -> выхож из  режима суперпользователя
ps -p $$ - показывает версию 

history
history -a
history -c
history -r
history | grep ll - показать историю детальным списокм
history | grep cd - найдет в истории все команды  с cd
history 5 - выведет последнии 5 строк истории
history | grep ll - поиск всех совпадений в history по ll

!2 - повтор команды 2 с истории
!22 - повтор команды 22 с истории
!-2 - повторяет предпоследнюю команду
!! - выполнит последюю команду
ctr+p - движении по истории вверх
ctr+n - движение по истории вниз
ctr+r - поиск по истории 
cnt+s - 

для вставки предедущего кода
ls /css/new/
cs !::1 - перейдет в каталог строкой выше


nano ~/.bashrc - открываем файл настроек баш

echo foo > temp.txt - создаст файл temp.txt если его не было и запишет в него temp.txt
echo foo1 >> temp.txt - добавит в конец файла temp.txt строку foo1
wc -w < temp.txt - покажет количество слов в файле temp.txt
wc -l выведет количество строк

nano ~/.bashrc - открываем файл и вставляем внизу строку ниже

export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND" - в результате история сохраняется сразу 

wc file - показывает информацию о фале (строки, слова, символы)
wc -c file - размер файла в байтах
wc -m file - количество символов  в файле
wc -l file - количество строк в файле
wc -w file - количество слов  в файле

tac file.txt -> показать содержимое файла в обратном порядке
head -n 2 file.txt -> вывести первые 2 строки в файле
tain -n 3 file.txt -> вывести последние 3 строки в файле


Переменные
name=$(echo "Bob")
syHello=$(echo "hello")
echo "$name say $sayHello"

Произвольный доступ
  [j]<>filename
      # Файл "filename" открывается на чтение и запись, и связывается с дескриптором "j".
      # Если "filename" отсутствует, то он создается.
      # Если дескриптор "j" не указан, то, по-умолчанию, бередся дескриптор 0, stdin.
      #
      # Как одно из применений этого -- запись в конкретную позицию в файле.
      echo 1234567890 > File    # Записать строку в файл "File".
      exec 3<> File       # Открыть "File" и связать с дескриптором 3.
      read -n 4 <&3             # Прочитать 4 символа.
      echo -n . >&3             # Записать символ точки.
      exec 3>&-                 # Закрыть дескриптор 3.
      cat File                  # ==> 1234.67890
      # Произвольный доступ, да и только!


Сортировка
cat Babel | sort | uniq > uniqBabel -> сортирует файл Babel удаляет повторяющийся строки и записывает в файл uniqBabel
sort Babel -> сортировка по возростанию текста и чисел

ПРАВА ДОСТУПА 
d -> каталог
r -> чтение -4
w -> запись -2
x -> выполнение -1

chmod 746 file.txt -> устанвливаем все права доступа на файл в результате привызове
		      ls -l file.txt получим -rwxr-rw-... (7 = 4 + 2 + 1)
chmod 777 file.txt 


Создание мягкой ссылки 
ln -s file-direction link-name 

UTILS
ps -> Список процессов
ps -ax ->  основная команда для работы, выводит только необходимую информацию
ps axuww -> более продвинутый вариант с информацией о пользовате и статистикой (для таких дел я советую использовать top или htop, но если их нет и установить нельзя то можно и так)	
ps -A -> ГлавнаяКомандыКоманда ps в Linux
КОМАНДА PS В LINUXКоманды Обновлено:  22 июня, 2020  2  admin 
Утилита ps одна из самых простых и в то же время часто используемых программ для просмотра списка процессов в Linux. Она не поддерживает интерактивный режим, зато имеет множество опций для настройки вывода тех или иных параметров процессов в Linux.


 
В этой статье мы рассмотрим как пользоваться ps, что с помощью неё можно посмотреть, а также какие основные опции можно использовать.

Содержание статьи:

Что такое процесс?
Команда ps в Linux
Выводы
ЧТО ТАКОЕ ПРОЦЕСС?
Чтобы понять что отображает команда ps сначала надо разобратся что такое процесс. Процесс Linux - это экземпляр программы, запущенный в памяти. Все процессы можно разделить на обычные и фоновые. Более подробно об этом написано в статье управление процессами Linux. Linux - это многопользовательская система, каждый пользователь может запускать одни и те же программы, и даже один пользователь может захотеть запустить несколько экземпляров одной программы, поэтому ядру нужно как-то идентифицировать такие однотипные процессы. Для этого каждому процессу присваивается PID (Proccess Identificator).

Каждый из процессов может находиться в одном из таких состояний:

Запуск - процесс либо уже работает, либо готов к работе и ждет, когда ему будет дано процессорное время;
Ожидание - процессы в этом состоянии ожидают какого-либо события или освобождения системного ресурса. Ядро делит такие процессы на два типа - те, которые ожидают освобождения аппаратных средств и приостановление с помощью сигнала;
Остановлено - обычно, в этом состоянии находятся процессы, которые были остановлены с помощью сигнала;
Зомби - это мертвые процессы, они были остановлены и больше не выполняются, но для них есть запись в таблице процессов, возможно, из-за того, что у процесса остались дочерние процессы.
А теперь давайте перейдем ближе к практике.

КОМАНДА PS В LINUX
Сначала рассмотрим общий синтаксис команды, здесь все очень просто:

$ ps опции

$ ps опции | grep параметр

Во втором варианте мы используем утилиту grep для того, чтобы отобрать нужные нам процессы по определенному критерию. Теперь рассмотрим опции утилиты. Они делятся на два типа - те, которые идут с дефисом Unix и те, которые используются без дефиса - BSD. Лучше пользоваться только опциями Unix, но мы рассмотрим и одни и другие. Заметьте, что при использовании опций BSD, вывод утилиты будет организован в BSD стиле.

-A, -e, (a) - выбрать все процессы;
-a - выбрать все процессы, кроме фоновых;
-d, (g) - выбрать все процессы, даже фоновые, кроме процессов сессий;
-N - выбрать все процессы кроме указанных;
-С - выбирать процессы по имени команды;
-G - выбрать процессы по ID группы;
-p, (p) - выбрать процессы PID;
--ppid - выбрать процессы по PID родительского процесса;
-s - выбрать процессы по ID сессии;
-t, (t) - выбрать процессы по tty;
-u, (U) - выбрать процессы пользователя.
Опции форматирования:

-с - отображать информацию планировщика;
-f - вывести максимум доступных данных, например, количество потоков;
-F - аналогично -f, только выводит ещё больше данных;
-l - длинный формат вывода;
-j, (j) - вывести процессы в стиле Jobs, минимум информации;
-M, (Z) - добавить информацию о безопасности;
-o, (o) - позволяет определить свой формат вывода;
--sort, (k) - выполнять сортировку по указанной колонке;
-L, (H)- отображать потоки процессов в колонках LWP и NLWP;
-m, (m) - вывести потоки после процесса;
-V, (V) - вывести информацию о версии;
-H - отображать дерево процессов;
Теперь, когда вы знаете синтаксис и опции, можно перейти ближе к практике. Чтобы просто посмотреть процессы в текущей оболочке используется такая команда терминала ps:

 ps



Все процессы, кроме лидеров групп, в том же режиме отображения:
