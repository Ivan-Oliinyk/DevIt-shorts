Для создания символьной ссылки необходимо (пример на image cowsay)
  - установить програму apt install cowsay;
  - для вызова програмы сейчас необходимо указать 
  
      (/usr/games/cowsay "Sey hellow") (это путь к установленному приложению)
      
  - для создании символьной ссылки добавляем  путь к бинарной директории 
  
      /usr/games/cowsay /usr/bin/cowsay
      (путь к приложению)(путь к бинароной траэетории)
  - для коммита контейнера необходимо 
      - docker commit myapp lorf91/cowsay99
      - тепер ь это образ
      - для запуска образа можно использовать 
        (docker run lorf91/cowsay99 cowsay "Hi")
      - для пуша неодходимо
        (docekr push lorf91/cowsay99)
      - нужно удалить образы и контейнеры что бы проверить как робатает образ из репозитория
        (docer run lorf91/cowsay99 cowsay "Hello !") 
        (Сначала пытается найти образ на компьюьере, после когда его не найдет идет на репозиторий скачивает его от туда как результат
          у нас появляется и образ и контейнер и все работате)
  
  LESSON 4
  
  Dockerfile 
    FROM ubuntu (система на которой будет развернут образ)
    MAINTAINER ivan <lorf1991@gmail.com> (данные про автора  образа)
    RUN apt-get update && apt-get install -y cowsay && ln -s /usr/games/cowsay /usr/bin/cowsay 
      (Список команд которые вызовутся при запуске контейнера)
      (apt-get update -> обновление индексов)
      (apt-get install -y cowsay -> установка приложения cowsay; -y нужен что бы подавить запрос без него вызовиться ошибка)
      (ln -s /usr/games/cowsay /usr/bin/cowsay -> создание символьной ссылки)
      (&& -> для  обьединения комманд)
      
    ENTRYPOINT ["cowsay"] (точка входа в данному случае сразу вызовиться команда cowsay(она же /usr/games/cowsay))
  
  
  LESSON 5
  
  (Связывание 2х контейнеров)
  -1)Ищем на docker hub  mariadb (читаем инструкцию по установке)
      docker run -p 127.0.0.1:3306:3306  --name mysqlserver -e MARIADB_ROOT_PASSWORD=123456 -d mariadb
        где
          -p 127.0.0.1:3306:3306 (порт на котором откроется база данных)
          --name mysqlserver (задаем имя нашей базе данных)
          -e MARIADB_ROOT_PASSWORD=123456 (задаем пароль базе данных)
          -d mariadb (запуск базы данных как демона)
   -2)Ищем на docker hub  adminer(читаем инструкцию по установке)
       docker run --link mysqlserver:db -p 8080:8080 adminer
          где 
            --link (указывает на связь образа с другим образом)
            --link mysqlserver:db (mysqlserver - укахывает на образ с которым будет связываться; 
              :db - префикс указывающий что это база данных)
            -p 8080:8080 (порт на котором будет работать админер)
            adminer - название образа
     3)После запуска можно зайти на и мы зайдем сервер с базой данных
        localhost:8080 
        name=root
        password=123456
     
  
  LESSON 6
  
  
  (composse)
    (нужно следить за версиями)
    docker -v
    docker-compose -v
    
    Далее заходим на сайт docker hub ищем mariadb ищем как установить через docker-compose 
    Находим такие парамтры файла
    docker-compose.yml или docker-compose.yаml
      version: "3.1" (версия docker-compose)
        services: 
          db:
            image: mariadb (образ maria)
            restart: always (указывает на то что в случае падения сервера он будет перезагружен и поднят заного)
            environment: 
              MYSQL_ROOT_PASSWORD: 222222 (пароль от базы данных)

          adminer:  
            image: adminer  (установка adminer)
            restart: always  (указывает на что если он упадет будет перезагружен и запущен)
            ports:
              - 9090:8080 (порт запуска по умолчанию 8080:8080 поменял  для наглядности)
              
     для запуска с файла docker-compose 
      docker-compose up (запуск в интерактивном режиме)
      docker-compose up -d (для запуска в  фоновом режиме)


LESSON 7 (связь между docker-compose and Dockerfile)
  В папке с проэктом создаем папки с названиями образов
  получаем такую структуру
    project
      adminer ->(папка для докерфайла админера)
        Dockerfile -> (докерфайл админера)
      db -> (папка для докерфайла базы данных )
        Dockerfile -> (докерфайл базы данных)
      databeses -> (папка для хранения базы данных из хоста)
      docker-compose.yml -> (файл докер-компосе)
      
   docker-compose.yml имеет структуру 
   version: "3.1"
      services:
        db:
          build: ./db
          restart: always
          environment:
            MYSQL_ROOT_PASSWORD: 444444
          volumes:
            - ./databases:/var/lib/mysql  (указываем шде будет хранится база данных хоста на локальном компьютере)

        adminer:
          build: ./adminer
          restart: always
          ports:
            - 9090:8080
            
     Команды для билда 
         docker-compose build
         docker-compose up -d 
    
  

     
